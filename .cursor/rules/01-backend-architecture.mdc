---
description:
globs:
alwaysApply: false
---
# Backend Architecture

## Tech Stack
- **Runtime**: Node.js
- **Framework**: Express.js
- **ORM**: Sequelize
- **API Style**: RESTful
- **Testing**: Jest + Supertest
- **Port**: 9002

## Directory Structure
```
backend/
├── src/
│   ├── controllers/    # Request handlers that use services
│   │   ├── auth.controller.js
│   │   ├── booking.controller.js
│   │   ├── field.controller.js
│   │   ├── feedback.controller.js
│   │   ├── product.controller.js
│   │   └── user.controller.js
│   ├── models/         # Sequelize models representing database tables
│   │   ├── index.js    # Model loader and associations
│   │   ├── user.model.js
│   │   ├── field.model.js
│   │   ├── booking.model.js
│   │   ├── product.model.js
│   │   ├── feedback.model.js
│   │   └── opponent.model.js
│   ├── routes/         # API route definitions
│   │   ├── auth.routes.js
│   │   ├── booking.routes.js
│   │   ├── field.routes.js
│   │   ├── feedback.routes.js
│   │   ├── product.routes.js
│   │   ├── opponent.routes.js
│   │   └── index.js    # Route aggregator
│   ├── middleware/     # Express middleware
│   │   ├── auth.middleware.js
│   │   ├── error.middleware.js
│   │   └── validation.middleware.js
│   ├── services/       # Business logic
│   │   ├── auth.service.js
│   │   ├── booking.service.js
│   │   ├── field.service.js
│   │   ├── feedback.service.js
│   │   ├── product.service.js
│   │   └── opponent.service.js
│   ├── utils/          # Utility functions
│   │   ├── logger.js
│   │   ├── jwt.js
│   │   └── errorHandler.js
│   ├── config/         # Configuration files
│   │   ├── db.config.js
│   │   ├── auth.config.js
│   │   └── server.config.js
│   ├── tests/          # Test suites
│   │   ├── unit/       # Unit tests
│   │   ├── integration/ # Integration tests 
│   │   └── fixtures/   # Test data
│   └── app.js          # Express application setup
├── package.json        # Dependencies and scripts
└── server.js           # Server entry point
```

## API Structure
All API endpoints follow RESTful conventions with the base URL prefix `/api/v1`

### Main Resources
- `/api/v1/auth` - Authentication (login, register, refresh)
- `/api/v1/users` - User management
- `/api/v1/fields` - Football field management
- `/api/v1/bookings` - Field bookings
- `/api/v1/products` - Products/services
- `/api/v1/feedback` - User feedback
- `/api/v1/opponents` - Find opponents feature

## Authentication
- JWT-based authentication
- Access tokens and refresh tokens
- Role-based authorization (User, Admin)

## Error Handling
- Consistent error response format
- Proper HTTP status codes
- Detailed error messages in development
- Generic error messages in production

## Logging
- Request logging
- Error logging
- Performance monitoring

## Testing Strategy
- Unit tests for services and utilities
- Integration tests for API endpoints
- Automated tests run before deployment
